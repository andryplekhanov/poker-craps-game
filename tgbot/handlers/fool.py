from asyncio import sleep

from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import Message, CallbackQuery

from tgbot.keyboards.inline_fool import fool_start_game
from tgbot.services.fool_service import create_deck, play_fool_round, hand_out_cards, pick_card
from tgbot.services.printer import print_fool_rules


async def fool(message: Message, state: FSMContext):
    """
    –•–µ–Ω–¥–ª–µ—Ä, —Ä–µ–∞–≥–∏—Ä—É—é—â–∏–π –Ω–∞ –∫–æ–º–∞–Ω–¥—É /fool.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ –≤—ã–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É.
    """
    await state.finish()
    await print_fool_rules(message)
    await message.answer('–ù—É —á—Ç–æ, —Å—Ä–∞–∑–∏–º—Å—è?', reply_markup=await fool_start_game())


async def start_fool(call: CallbackQuery, state: FSMContext):
    """
    –•–µ–Ω–¥–ª–µ—Ä, –Ω–∞—á–∏–Ω–∞—é—â–∏–π –∏–≥—Ä—É. –†–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ fool_start_game.
    –ó–∞–¥–∞—ë—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥ play_fool_round.
    """
    await call.message.edit_reply_markup(reply_markup=None)
    deck = await create_deck()
    async with state.proxy() as data:
        data['deck'] = deck
    trump = await pick_card(state)
    player_cards = await hand_out_cards(state, 6)
    bot_cards = await hand_out_cards(state, 6)
    async with state.proxy() as data:
        data['player_cards'] = player_cards
        data['bot_cards'] = bot_cards
        data['trump'] = trump
    await call.message.answer(f"üëç –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É.\n–ü–æ–µ—Ö–∞–ª–∏!")
    await sleep(3)
    await play_fool_round(call.message, state)
    await call.message.delete()


def register_fool(dp: Dispatcher):
    dp.register_message_handler(fool, commands=["fool"], state="*")
    dp.register_callback_query_handler(start_fool, text='fool_start_game', state="*")
