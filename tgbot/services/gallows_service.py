import os
from asyncio import sleep
from random import choice

from aiogram.dispatcher import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove

from tgbot.services.default_commands import get_default_commands
from tgbot.services.printer import print_gallows_letter, print_emotion, print_gallows, print_correct_word


async def choose_word() -> str:
    """
    –§—É–Ω–∫—Ü–∏—è —á–∏—Ç–∞–µ—Ç —Å–ª–æ–≤–∞ –∏–∑ —Ñ–∞–π–ª–∞ –∏ –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ
    :return (str): —Å–ª—É—á–∞–π–Ω–æ–µ —Å–ª–æ–≤–æ
    """
    path = os.path.abspath(os.path.join('tgbot', 'files', 'words.txt'))
    with open(path, 'r', encoding='utf8') as file:
        content = file.readlines()
        return choice(content)


async def get_current_states(state: FSMContext) -> tuple[list, list, list, int]:
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –º–∞—à–∏–Ω–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –∑–∞–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–ª–∞—Å—Å–∞ GallowsGame.
    :return (tuple): good_letters, bad_letters, word, errors
    """
    states = await state.get_data()
    good_letters = states.get('good_letters')
    bad_letters = states.get('bad_letters')
    word = states.get('word')
    errors = states.get('errors')
    return good_letters, bad_letters, word, errors


async def check_letter(message: Message, state: FSMContext, letter: str) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–≤–µ–¥–µ–Ω–Ω—É—é –±—É–∫–≤—É.
    –ï—Å–ª–∏ –±—É–∫–≤–∞ –Ω–∞–∑—ã–≤–∞–ª–∞—Å—å —Ä–∞–Ω–µ–µ, –ø—Ä–æ—Å–∏—Ç –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥—É—é.
    –ï—Å–ª–∏ –±—É–∫–≤–∞ –µ—Å—Ç—å –≤ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–º —Å–ª–æ–≤–µ –∏ –æ–Ω–∞ –Ω–µ –Ω–∞–∑—ã–≤–∞–ª–∞—Å—å —Ä–∞–Ω–µ–µ, –ø–æ–º–µ—â–∞–µ—Ç –µ—ë –≤ —Å–ø–∏—Å–æ–∫ –æ—Ç–≥–∞–¥–∞–Ω–Ω—ã—Ö –±—É–∫–≤.
    –ò–Ω–∞—á–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫, –ø–æ–º–µ—â–∞–µ—Ç –±—É–∫–≤—É –≤ —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ—á–Ω—ã—Ö –±—É–∫–≤ –∏ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—á–∞—Ç–∏ –≤–∏—Å–µ–ª–∏—Ü—ã.
    –í –∫–æ–Ω—Ü–µ –ø–µ—á–∞—Ç–∞–µ—Ç –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ, —Å–∫—Ä—ã–≤–∞—è –Ω–µ–æ—Ç–≥–∞–¥–∞–Ω–Ω—ã–µ –±—É–∫–≤—ã.

    """
    good_letters, bad_letters, word, errors = await get_current_states(state)

    if letter in good_letters or letter in bad_letters:
        await message.answer('–¢—ã —É–∂–µ –Ω–∞–∑—ã–≤–∞–ª —ç—Ç—É –±—É–∫–≤—É. –í–≤–µ–¥–∏ –¥—Ä—É–≥—É—é...')
    elif letter in word:
        good_letters.append(letter)
        async with state.proxy() as data:
            data['good_letters'] = good_letters
    else:
        bad_letters.append(letter)
        errors += 1
        async with state.proxy() as data:
            data['bad_letters'] = bad_letters
            data['errors'] = errors
        await print_gallows(message, errors)
    await print_gallows_letter(message, state)


async def is_word_guessed(good_letters, word) -> bool:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç: –æ—Ç–≥–∞–¥–∞–Ω–æ –ª–∏ —Å–ª–æ–≤–æ.
    """
    return all([letter in good_letters for letter in word])


async def check_gallows_game_status(message: Message, state: FSMContext) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã. –ï—Å–ª–∏ —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ == 8, –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É –ø–æ–±–µ–¥–æ–π –±–æ—Ç–∞.
    –ï—Å–ª–∏ —Å–ª–æ–≤–æ –æ—Ç–≥–∞–¥–∞–Ω–æ, –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É –ø–æ–±–µ–¥–æ–π –∏–≥—Ä–æ–∫–∞.
    """
    good_letters, bad_letters, word, errors = await get_current_states(state)
    if errors == 8:
        await finish_gallows_game(message, state, 'bot')
    elif await is_word_guessed(good_letters, word):
        await finish_gallows_game(message, state, 'player')
    else:
        await message.answer('–í–≤–µ–¥–∏ –±—É–∫–≤—É...')


async def finish_gallows_game(message: Message, state: FSMContext, winner: str) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É.
    –ï—Å–ª–∏ –ø–æ–±–µ–¥–∏–ª –±–æ—Ç, –ø–µ—á–∞—Ç–∞–µ—Ç –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ. –ï—Å–ª–∏ –ø–æ–±–µ–¥–∏–ª –∏–≥—Ä–æ–∫ - –ø–µ—á–∞—Ç–∞–µ—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ.
    –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è, –ø–µ—á–∞—Ç–∞–µ—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Ä–µ–∞–∫—Ü–∏—é –±–æ—Ç–∞.
    –°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –ø–µ—á–∞—Ç–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.
    """
    if winner == 'bot':
        await print_correct_word(message, state)
        await print_emotion(message=message, bot_win=True)
    else:
        await message.answer('üòé –í—ã –æ—Ç–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ! –≠—Ç–æ –ø–æ–±–µ–¥–∞! üéâüéâüéâ')
        await print_emotion(message=message, bot_win=False)
    await state.finish()
    commands = await get_default_commands()
    await sleep(3)
    await message.answer(f"ü§ñ –í–æ —á—Ç–æ —Å—ã–≥—Ä–∞–µ–º?\n\n{commands}", reply_markup=ReplyKeyboardRemove())
